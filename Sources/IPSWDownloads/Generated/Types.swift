// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// Get Firmwares For Device
    ///
    /// GetFirmwaresForDevice returns Firmwares for a given Device. An optional "type" get parameter may be
    /// specified to retrieve OTA Firmwares instead of normal IPSW files. 
    /// As of 2021-03-04, it is recommended that you use the "boards" property of the device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /device/{identifier}`.
    /// - Remark: Generated from `#/paths//device/{identifier}/get(firmwaresForDevice)`.
    func firmwaresForDevice(_ input: Operations.firmwaresForDevice.Input) async throws -> Operations.firmwaresForDevice.Output
    /// Get Devices
    ///
    /// GetDevices returns a list of all devices known to IPSW Downloads
    /// If you wish to only get devices which have Firmware Keys, add the ?keysOnly=true parameter.
    /// As of 2021-03-04, it is recommended that you use the "boards" property of each device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /devices`.
    /// - Remark: Generated from `#/paths//devices/get(devices)`.
    func devices(_ input: Operations.devices.Input) async throws -> Operations.devices.Output
    /// Download IPSW
    ///
    /// DownloadIPSW redirects to download an IPSW as specified by its identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/download/{identifier}/{buildid}/get(ipswDownload)`.
    func ipswDownload(_ input: Operations.ipswDownload.Input) async throws -> Operations.ipswDownload.Output
    /// Get IPSW Information
    ///
    /// GetIPSWInformation returns all known information for an IPSW as specified by identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/{identifier}/{buildid}/get(ipswByIdentifierAndBuild)`.
    func ipswByIdentifierAndBuild(_ input: Operations.ipswByIdentifierAndBuild.Input) async throws -> Operations.ipswByIdentifierAndBuild.Output
    /// Get IPSW List For Version
    ///
    /// GetIPSWListForVersion finds all IPSW files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ipsw/{version}`.
    /// - Remark: Generated from `#/paths//ipsw/{version}/get(ipswListForVersion)`.
    func ipswListForVersion(_ input: Operations.ipswListForVersion.Input) async throws -> Operations.ipswListForVersion.Output
    /// Download Itunes
    ///
    /// DownloadItunes redirects to download an iTunes installer as specified by its platform and version, and architecture for windows
    ///
    /// - Remark: HTTP `GET /itunes/download/{platform}/{version}`.
    /// - Remark: Generated from `#/paths//itunes/download/{platform}/{version}/get(itunesDownloadForPlatformAndVersion)`.
    func itunesDownloadForPlatformAndVersion(_ input: Operations.itunesDownloadForPlatformAndVersion.Input) async throws -> Operations.itunesDownloadForPlatformAndVersion.Output
    /// Find Itunes
    ///
    /// FindItunes finds FindItunes versions for a given platform. specify either "windows" or "macOS"
    ///
    /// - Remark: HTTP `GET /itunes/{platform}`.
    /// - Remark: Generated from `#/paths//itunes/{platform}/get(itunesForPlatform)`.
    func itunesForPlatform(_ input: Operations.itunesForPlatform.Input) async throws -> Operations.itunesForPlatform.Output
    /// Keys Device List
    ///
    /// KeysDeviceList returns the firmwares which have keys for a given device
    ///
    /// - Remark: HTTP `GET /keys/device/{identifier}`.
    /// - Remark: Generated from `#/paths//keys/device/{identifier}/get(firmwareKeysForIdentifier)`.
    func firmwareKeysForIdentifier(_ input: Operations.firmwareKeysForIdentifier.Input) async throws -> Operations.firmwareKeysForIdentifier.Output
    /// Keys For IPSW
    ///
    /// KeysForIPSW returns FirmwareKeys for a given IPSW
    ///
    /// - Remark: HTTP `GET /keys/ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//keys/ipsw/{identifier}/{buildid}/get(firmwareKeysForIdentifierAndBuild)`.
    func firmwareKeysForIdentifierAndBuild(_ input: Operations.firmwareKeysForIdentifierAndBuild.Input) async throws -> Operations.firmwareKeysForIdentifierAndBuild.Output
    /// Identify Model
    ///
    /// IdentifyModel finds the identifier of a given model number
    ///
    /// - Remark: HTTP `GET /model/{model}`.
    /// - Remark: Generated from `#/paths//model/{model}/get(identifierForModel)`.
    func identifierForModel(_ input: Operations.identifierForModel.Input) async throws -> Operations.identifierForModel.Output
    /// OTA Documentation
    ///
    /// OTADocumentation returns the documentation for a given device type and version
    ///
    /// - Remark: HTTP `GET /ota/documentation/{device}/{version}`.
    /// - Remark: Generated from `#/paths//ota/documentation/{device}/{version}/get(otaDocumentationForDeviceAndVersion)`.
    func otaDocumentationForDeviceAndVersion(_ input: Operations.otaDocumentationForDeviceAndVersion.Input) async throws -> Operations.otaDocumentationForDeviceAndVersion.Output
    /// Download OTA
    ///
    /// DownloadOTA redirects to download an OTA Firmware as specified by its identifier, buildid and optionally prerequisite
    ///
    /// - Remark: HTTP `GET /ota/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/download/{identifier}/{buildid}/get(otaDownloadForIdentifierAndBuild)`.
    func otaDownloadForIdentifierAndBuild(_ input: Operations.otaDownloadForIdentifierAndBuild.Input) async throws -> Operations.otaDownloadForIdentifierAndBuild.Output
    /// Get OTA Information
    ///
    /// GetOTAInformation returns all known information for an OTA specified by its identifier and build (and optionally
    /// prerequisite firmware)
    ///
    /// - Remark: HTTP `GET /ota/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/{identifier}/{buildid}/get(otaInformationForIdentifierAndBuild)`.
    func otaInformationForIdentifierAndBuild(_ input: Operations.otaInformationForIdentifierAndBuild.Input) async throws -> Operations.otaInformationForIdentifierAndBuild.Output
    /// Get OTA List For Version
    ///
    /// GetOTAListForVersion finds all OTA files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ota/{version}`.
    /// - Remark: Generated from `#/paths//ota/{version}/get(otasForVersion)`.
    func otasForVersion(_ input: Operations.otasForVersion.Input) async throws -> Operations.otasForVersion.Output
    /// Releases
    ///
    /// Releases returns the release timeline of all entities in the IPSW Downloads database
    ///
    /// - Remark: HTTP `GET /releases`.
    /// - Remark: Generated from `#/paths//releases/get(releases)`.
    func releases(_ input: Operations.releases.Input) async throws -> Operations.releases.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get Firmwares For Device
    ///
    /// GetFirmwaresForDevice returns Firmwares for a given Device. An optional "type" get parameter may be
    /// specified to retrieve OTA Firmwares instead of normal IPSW files. 
    /// As of 2021-03-04, it is recommended that you use the "boards" property of the device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /device/{identifier}`.
    /// - Remark: Generated from `#/paths//device/{identifier}/get(firmwaresForDevice)`.
    internal func firmwaresForDevice(
        path: Operations.firmwaresForDevice.Input.Path,
        query: Operations.firmwaresForDevice.Input.Query,
        headers: Operations.firmwaresForDevice.Input.Headers = .init()
    ) async throws -> Operations.firmwaresForDevice.Output {
        try await firmwaresForDevice(Operations.firmwaresForDevice.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get Devices
    ///
    /// GetDevices returns a list of all devices known to IPSW Downloads
    /// If you wish to only get devices which have Firmware Keys, add the ?keysOnly=true parameter.
    /// As of 2021-03-04, it is recommended that you use the "boards" property of each device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /devices`.
    /// - Remark: Generated from `#/paths//devices/get(devices)`.
    internal func devices(
        query: Operations.devices.Input.Query,
        headers: Operations.devices.Input.Headers = .init()
    ) async throws -> Operations.devices.Output {
        try await devices(Operations.devices.Input(
            query: query,
            headers: headers
        ))
    }
    /// Download IPSW
    ///
    /// DownloadIPSW redirects to download an IPSW as specified by its identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/download/{identifier}/{buildid}/get(ipswDownload)`.
    internal func ipswDownload(
        path: Operations.ipswDownload.Input.Path,
        headers: Operations.ipswDownload.Input.Headers = .init()
    ) async throws -> Operations.ipswDownload.Output {
        try await ipswDownload(Operations.ipswDownload.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get IPSW Information
    ///
    /// GetIPSWInformation returns all known information for an IPSW as specified by identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/{identifier}/{buildid}/get(ipswByIdentifierAndBuild)`.
    internal func ipswByIdentifierAndBuild(
        path: Operations.ipswByIdentifierAndBuild.Input.Path,
        headers: Operations.ipswByIdentifierAndBuild.Input.Headers = .init()
    ) async throws -> Operations.ipswByIdentifierAndBuild.Output {
        try await ipswByIdentifierAndBuild(Operations.ipswByIdentifierAndBuild.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get IPSW List For Version
    ///
    /// GetIPSWListForVersion finds all IPSW files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ipsw/{version}`.
    /// - Remark: Generated from `#/paths//ipsw/{version}/get(ipswListForVersion)`.
    internal func ipswListForVersion(
        path: Operations.ipswListForVersion.Input.Path,
        headers: Operations.ipswListForVersion.Input.Headers = .init()
    ) async throws -> Operations.ipswListForVersion.Output {
        try await ipswListForVersion(Operations.ipswListForVersion.Input(
            path: path,
            headers: headers
        ))
    }
    /// Download Itunes
    ///
    /// DownloadItunes redirects to download an iTunes installer as specified by its platform and version, and architecture for windows
    ///
    /// - Remark: HTTP `GET /itunes/download/{platform}/{version}`.
    /// - Remark: Generated from `#/paths//itunes/download/{platform}/{version}/get(itunesDownloadForPlatformAndVersion)`.
    internal func itunesDownloadForPlatformAndVersion(
        path: Operations.itunesDownloadForPlatformAndVersion.Input.Path,
        query: Operations.itunesDownloadForPlatformAndVersion.Input.Query,
        headers: Operations.itunesDownloadForPlatformAndVersion.Input.Headers = .init()
    ) async throws -> Operations.itunesDownloadForPlatformAndVersion.Output {
        try await itunesDownloadForPlatformAndVersion(Operations.itunesDownloadForPlatformAndVersion.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Find Itunes
    ///
    /// FindItunes finds FindItunes versions for a given platform. specify either "windows" or "macOS"
    ///
    /// - Remark: HTTP `GET /itunes/{platform}`.
    /// - Remark: Generated from `#/paths//itunes/{platform}/get(itunesForPlatform)`.
    internal func itunesForPlatform(
        path: Operations.itunesForPlatform.Input.Path,
        headers: Operations.itunesForPlatform.Input.Headers = .init()
    ) async throws -> Operations.itunesForPlatform.Output {
        try await itunesForPlatform(Operations.itunesForPlatform.Input(
            path: path,
            headers: headers
        ))
    }
    /// Keys Device List
    ///
    /// KeysDeviceList returns the firmwares which have keys for a given device
    ///
    /// - Remark: HTTP `GET /keys/device/{identifier}`.
    /// - Remark: Generated from `#/paths//keys/device/{identifier}/get(firmwareKeysForIdentifier)`.
    internal func firmwareKeysForIdentifier(
        path: Operations.firmwareKeysForIdentifier.Input.Path,
        headers: Operations.firmwareKeysForIdentifier.Input.Headers = .init()
    ) async throws -> Operations.firmwareKeysForIdentifier.Output {
        try await firmwareKeysForIdentifier(Operations.firmwareKeysForIdentifier.Input(
            path: path,
            headers: headers
        ))
    }
    /// Keys For IPSW
    ///
    /// KeysForIPSW returns FirmwareKeys for a given IPSW
    ///
    /// - Remark: HTTP `GET /keys/ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//keys/ipsw/{identifier}/{buildid}/get(firmwareKeysForIdentifierAndBuild)`.
    internal func firmwareKeysForIdentifierAndBuild(
        path: Operations.firmwareKeysForIdentifierAndBuild.Input.Path,
        headers: Operations.firmwareKeysForIdentifierAndBuild.Input.Headers = .init()
    ) async throws -> Operations.firmwareKeysForIdentifierAndBuild.Output {
        try await firmwareKeysForIdentifierAndBuild(Operations.firmwareKeysForIdentifierAndBuild.Input(
            path: path,
            headers: headers
        ))
    }
    /// Identify Model
    ///
    /// IdentifyModel finds the identifier of a given model number
    ///
    /// - Remark: HTTP `GET /model/{model}`.
    /// - Remark: Generated from `#/paths//model/{model}/get(identifierForModel)`.
    internal func identifierForModel(
        path: Operations.identifierForModel.Input.Path,
        headers: Operations.identifierForModel.Input.Headers = .init()
    ) async throws -> Operations.identifierForModel.Output {
        try await identifierForModel(Operations.identifierForModel.Input(
            path: path,
            headers: headers
        ))
    }
    /// OTA Documentation
    ///
    /// OTADocumentation returns the documentation for a given device type and version
    ///
    /// - Remark: HTTP `GET /ota/documentation/{device}/{version}`.
    /// - Remark: Generated from `#/paths//ota/documentation/{device}/{version}/get(otaDocumentationForDeviceAndVersion)`.
    internal func otaDocumentationForDeviceAndVersion(
        path: Operations.otaDocumentationForDeviceAndVersion.Input.Path,
        headers: Operations.otaDocumentationForDeviceAndVersion.Input.Headers = .init()
    ) async throws -> Operations.otaDocumentationForDeviceAndVersion.Output {
        try await otaDocumentationForDeviceAndVersion(Operations.otaDocumentationForDeviceAndVersion.Input(
            path: path,
            headers: headers
        ))
    }
    /// Download OTA
    ///
    /// DownloadOTA redirects to download an OTA Firmware as specified by its identifier, buildid and optionally prerequisite
    ///
    /// - Remark: HTTP `GET /ota/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/download/{identifier}/{buildid}/get(otaDownloadForIdentifierAndBuild)`.
    internal func otaDownloadForIdentifierAndBuild(
        path: Operations.otaDownloadForIdentifierAndBuild.Input.Path,
        query: Operations.otaDownloadForIdentifierAndBuild.Input.Query,
        headers: Operations.otaDownloadForIdentifierAndBuild.Input.Headers = .init()
    ) async throws -> Operations.otaDownloadForIdentifierAndBuild.Output {
        try await otaDownloadForIdentifierAndBuild(Operations.otaDownloadForIdentifierAndBuild.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get OTA Information
    ///
    /// GetOTAInformation returns all known information for an OTA specified by its identifier and build (and optionally
    /// prerequisite firmware)
    ///
    /// - Remark: HTTP `GET /ota/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/{identifier}/{buildid}/get(otaInformationForIdentifierAndBuild)`.
    internal func otaInformationForIdentifierAndBuild(
        path: Operations.otaInformationForIdentifierAndBuild.Input.Path,
        query: Operations.otaInformationForIdentifierAndBuild.Input.Query,
        headers: Operations.otaInformationForIdentifierAndBuild.Input.Headers = .init()
    ) async throws -> Operations.otaInformationForIdentifierAndBuild.Output {
        try await otaInformationForIdentifierAndBuild(Operations.otaInformationForIdentifierAndBuild.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get OTA List For Version
    ///
    /// GetOTAListForVersion finds all OTA files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ota/{version}`.
    /// - Remark: Generated from `#/paths//ota/{version}/get(otasForVersion)`.
    internal func otasForVersion(
        path: Operations.otasForVersion.Input.Path,
        headers: Operations.otasForVersion.Input.Headers = .init()
    ) async throws -> Operations.otasForVersion.Output {
        try await otasForVersion(Operations.otasForVersion.Input(
            path: path,
            headers: headers
        ))
    }
    /// Releases
    ///
    /// Releases returns the release timeline of all entities in the IPSW Downloads database
    ///
    /// - Remark: HTTP `GET /releases`.
    /// - Remark: Generated from `#/paths//releases/get(releases)`.
    internal func releases(headers: Operations.releases.Input.Headers = .init()) async throws -> Operations.releases.Output {
        try await releases(Operations.releases.Input(headers: headers))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.ipsw.me/v4",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/NotFoundDetails`.
        internal struct NotFoundDetails: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/NotFoundDetails/status`.
            internal var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/NotFoundDetails/message`.
            internal var message: Swift.String?
            /// Creates a new `NotFoundDetails`.
            ///
            /// - Parameters:
            ///   - status:
            ///   - message:
            internal init(
                status: Swift.Int? = nil,
                message: Swift.String? = nil
            ) {
                self.status = status
                self.message = message
            }
            internal enum CodingKeys: String, CodingKey {
                case status
                case message
            }
        }
        /// - Remark: Generated from `#/components/schemas/ReleaseDate`.
        internal struct ReleaseDate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ReleaseDate/date`.
            internal var date: Swift.String
            /// - Remark: Generated from `#/components/schemas/ReleaseDate/releases`.
            internal var releases: [OpenAPIRuntime.OpenAPIValueContainer]
            /// Creates a new `ReleaseDate`.
            ///
            /// - Parameters:
            ///   - date:
            ///   - releases:
            internal init(
                date: Swift.String,
                releases: [OpenAPIRuntime.OpenAPIValueContainer]
            ) {
                self.date = date
                self.releases = releases
            }
            internal enum CodingKeys: String, CodingKey {
                case date
                case releases
            }
        }
        /// - Remark: Generated from `#/components/schemas/ReleaseEntry`.
        internal struct ReleaseEntry: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ReleaseEntry/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/ReleaseEntry/date`.
            internal var date: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/ReleaseEntry/count`.
            internal var count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/ReleaseEntry/type`.
            internal var _type: Swift.String
            /// Creates a new `ReleaseEntry`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - date:
            ///   - count:
            ///   - _type:
            internal init(
                name: Swift.String,
                date: Foundation.Date,
                count: Swift.Int,
                _type: Swift.String
            ) {
                self.name = name
                self.date = date
                self.count = count
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case date
                case count
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/OTA`.
        internal struct OTA: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/OTA/identifier`.
            internal var identifier: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/buildid`.
            internal var buildid: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/version`.
            internal var version: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/url`.
            internal var url: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/filesize`.
            internal var filesize: Swift.Int
            /// - Remark: Generated from `#/components/schemas/OTA/prerequisitebuildid`.
            internal var prerequisitebuildid: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/prerequisiteversion`.
            internal var prerequisiteversion: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/releasetype`.
            internal var releasetype: Swift.String
            /// - Remark: Generated from `#/components/schemas/OTA/uploaddate`.
            internal var uploaddate: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/OTA/releasedate`.
            internal var releasedate: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/OTA/marketingversion`.
            internal var marketingversion: OpenAPIRuntime.OpenAPIValueContainer?
            /// - Remark: Generated from `#/components/schemas/OTA/signed`.
            internal var signed: Swift.Bool
            /// Creates a new `OTA`.
            ///
            /// - Parameters:
            ///   - identifier:
            ///   - buildid:
            ///   - version:
            ///   - url:
            ///   - filesize:
            ///   - prerequisitebuildid:
            ///   - prerequisiteversion:
            ///   - releasetype:
            ///   - uploaddate:
            ///   - releasedate:
            ///   - marketingversion:
            ///   - signed:
            internal init(
                identifier: Swift.String,
                buildid: Swift.String,
                version: Swift.String,
                url: Swift.String,
                filesize: Swift.Int,
                prerequisitebuildid: Swift.String,
                prerequisiteversion: Swift.String,
                releasetype: Swift.String,
                uploaddate: Foundation.Date,
                releasedate: Foundation.Date,
                marketingversion: OpenAPIRuntime.OpenAPIValueContainer? = nil,
                signed: Swift.Bool
            ) {
                self.identifier = identifier
                self.buildid = buildid
                self.version = version
                self.url = url
                self.filesize = filesize
                self.prerequisitebuildid = prerequisitebuildid
                self.prerequisiteversion = prerequisiteversion
                self.releasetype = releasetype
                self.uploaddate = uploaddate
                self.releasedate = releasedate
                self.marketingversion = marketingversion
                self.signed = signed
            }
            internal enum CodingKeys: String, CodingKey {
                case identifier
                case buildid
                case version
                case url
                case filesize
                case prerequisitebuildid
                case prerequisiteversion
                case releasetype
                case uploaddate
                case releasedate
                case marketingversion
                case signed
            }
        }
        /// - Remark: Generated from `#/components/schemas/Model`.
        internal struct Model: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Model/identifier`.
            internal var identifier: Swift.String?
            /// Creates a new `Model`.
            ///
            /// - Parameters:
            ///   - identifier:
            internal init(identifier: Swift.String? = nil) {
                self.identifier = identifier
            }
            internal enum CodingKeys: String, CodingKey {
                case identifier
            }
        }
        /// - Remark: Generated from `#/components/schemas/Key`.
        internal struct Key: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Key/image`.
            internal var image: Swift.String
            /// - Remark: Generated from `#/components/schemas/Key/filename`.
            internal var filename: Swift.String
            /// - Remark: Generated from `#/components/schemas/Key/kbag`.
            internal var kbag: Swift.String
            /// - Remark: Generated from `#/components/schemas/Key/key`.
            internal var key: Swift.String
            /// - Remark: Generated from `#/components/schemas/Key/iv`.
            internal var iv: Swift.String
            /// - Remark: Generated from `#/components/schemas/Key/date`.
            internal var date: Foundation.Date
            /// Creates a new `Key`.
            ///
            /// - Parameters:
            ///   - image:
            ///   - filename:
            ///   - kbag:
            ///   - key:
            ///   - iv:
            ///   - date:
            internal init(
                image: Swift.String,
                filename: Swift.String,
                kbag: Swift.String,
                key: Swift.String,
                iv: Swift.String,
                date: Foundation.Date
            ) {
                self.image = image
                self.filename = filename
                self.kbag = kbag
                self.key = key
                self.iv = iv
                self.date = date
            }
            internal enum CodingKeys: String, CodingKey {
                case image
                case filename
                case kbag
                case key
                case iv
                case date
            }
        }
        /// - Remark: Generated from `#/components/schemas/FirmwareKey`.
        internal struct FirmwareKey: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/identifier`.
            internal var identifier: Swift.String
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/buildid`.
            internal var buildid: Swift.String
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/codename`.
            internal var codename: Swift.String
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/baseband`.
            internal var baseband: Swift.String?
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/updateramdiskexists`.
            internal var updateramdiskexists: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/restoreramdiskexists`.
            internal var restoreramdiskexists: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/FirmwareKey/keys`.
            internal var keys: [Components.Schemas.Key]?
            /// Creates a new `FirmwareKey`.
            ///
            /// - Parameters:
            ///   - identifier:
            ///   - buildid:
            ///   - codename:
            ///   - baseband:
            ///   - updateramdiskexists:
            ///   - restoreramdiskexists:
            ///   - keys:
            internal init(
                identifier: Swift.String,
                buildid: Swift.String,
                codename: Swift.String,
                baseband: Swift.String? = nil,
                updateramdiskexists: Swift.Bool,
                restoreramdiskexists: Swift.Bool,
                keys: [Components.Schemas.Key]? = nil
            ) {
                self.identifier = identifier
                self.buildid = buildid
                self.codename = codename
                self.baseband = baseband
                self.updateramdiskexists = updateramdiskexists
                self.restoreramdiskexists = restoreramdiskexists
                self.keys = keys
            }
            internal enum CodingKeys: String, CodingKey {
                case identifier
                case buildid
                case codename
                case baseband
                case updateramdiskexists
                case restoreramdiskexists
                case keys
            }
        }
        /// - Remark: Generated from `#/components/schemas/iTunes`.
        internal struct iTunes: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/iTunes/platform`.
            internal var platform: Swift.String
            /// - Remark: Generated from `#/components/schemas/iTunes/version`.
            internal var version: Swift.String
            /// - Remark: Generated from `#/components/schemas/iTunes/datefound`.
            internal var datefound: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/iTunes/url`.
            internal var url: Swift.String
            /// - Remark: Generated from `#/components/schemas/iTunes/64biturl`.
            internal var _64biturl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/iTunes/releasedate`.
            internal var releasedate: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/iTunes/uploaddate`.
            internal var uploaddate: Foundation.Date
            /// Creates a new `iTunes`.
            ///
            /// - Parameters:
            ///   - platform:
            ///   - version:
            ///   - datefound:
            ///   - url:
            ///   - _64biturl:
            ///   - releasedate:
            ///   - uploaddate:
            internal init(
                platform: Swift.String,
                version: Swift.String,
                datefound: Foundation.Date,
                url: Swift.String,
                _64biturl: Swift.String? = nil,
                releasedate: Foundation.Date,
                uploaddate: Foundation.Date
            ) {
                self.platform = platform
                self.version = version
                self.datefound = datefound
                self.url = url
                self._64biturl = _64biturl
                self.releasedate = releasedate
                self.uploaddate = uploaddate
            }
            internal enum CodingKeys: String, CodingKey {
                case platform
                case version
                case datefound
                case url
                case _64biturl = "64biturl"
                case releasedate
                case uploaddate
            }
        }
        /// - Remark: Generated from `#/components/schemas/Board`.
        internal struct Board: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Board/boardconfig`.
            internal var boardconfig: Swift.String
            /// - Remark: Generated from `#/components/schemas/Board/platform`.
            internal var platform: Swift.String
            /// - Remark: Generated from `#/components/schemas/Board/cpid`.
            internal var cpid: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Board/bdid`.
            internal var bdid: Swift.Int
            /// Creates a new `Board`.
            ///
            /// - Parameters:
            ///   - boardconfig:
            ///   - platform:
            ///   - cpid:
            ///   - bdid:
            internal init(
                boardconfig: Swift.String,
                platform: Swift.String,
                cpid: Swift.Int,
                bdid: Swift.Int
            ) {
                self.boardconfig = boardconfig
                self.platform = platform
                self.cpid = cpid
                self.bdid = bdid
            }
            internal enum CodingKeys: String, CodingKey {
                case boardconfig
                case platform
                case cpid
                case bdid
            }
        }
        /// - Remark: Generated from `#/components/schemas/Firmware`.
        internal struct Firmware: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Firmware/identifier`.
            internal var identifier: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/version`.
            internal var version: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/buildid`.
            internal var buildid: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/sha1sum`.
            internal var sha1sum: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/md5sum`.
            internal var md5sum: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/filesize`.
            internal var filesize: Swift.Int
            /// - Remark: Generated from `#/components/schemas/Firmware/url`.
            internal var url: Swift.String
            /// - Remark: Generated from `#/components/schemas/Firmware/releasedate`.
            internal var releasedate: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Firmware/uploaddate`.
            internal var uploaddate: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Firmware/signed`.
            internal var signed: Swift.Bool
            /// Creates a new `Firmware`.
            ///
            /// - Parameters:
            ///   - identifier:
            ///   - version:
            ///   - buildid:
            ///   - sha1sum:
            ///   - md5sum:
            ///   - filesize:
            ///   - url:
            ///   - releasedate:
            ///   - uploaddate:
            ///   - signed:
            internal init(
                identifier: Swift.String,
                version: Swift.String,
                buildid: Swift.String,
                sha1sum: Swift.String,
                md5sum: Swift.String,
                filesize: Swift.Int,
                url: Swift.String,
                releasedate: Foundation.Date,
                uploaddate: Foundation.Date,
                signed: Swift.Bool
            ) {
                self.identifier = identifier
                self.version = version
                self.buildid = buildid
                self.sha1sum = sha1sum
                self.md5sum = md5sum
                self.filesize = filesize
                self.url = url
                self.releasedate = releasedate
                self.uploaddate = uploaddate
                self.signed = signed
            }
            internal enum CodingKeys: String, CodingKey {
                case identifier
                case version
                case buildid
                case sha1sum
                case md5sum
                case filesize
                case url
                case releasedate
                case uploaddate
                case signed
            }
        }
        /// - Remark: Generated from `#/components/schemas/Device`.
        internal struct Device: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Device/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Device/identifier`.
            internal var identifier: Swift.String
            /// - Remark: Generated from `#/components/schemas/Device/firmwares`.
            internal var firmwares: [Components.Schemas.Firmware]
            /// - Remark: Generated from `#/components/schemas/Device/boards`.
            internal var boards: [Components.Schemas.Board]
            /// - Remark: Generated from `#/components/schemas/Device/boardconfig`.
            internal var boardconfig: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Device/platform`.
            internal var platform: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Device/cpid`.
            internal var cpid: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/Device/bdid`.
            internal var bdid: Swift.Int?
            /// Creates a new `Device`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - identifier:
            ///   - firmwares:
            ///   - boards:
            ///   - boardconfig:
            ///   - platform:
            ///   - cpid:
            ///   - bdid:
            internal init(
                name: Swift.String,
                identifier: Swift.String,
                firmwares: [Components.Schemas.Firmware],
                boards: [Components.Schemas.Board],
                boardconfig: Swift.String? = nil,
                platform: Swift.String? = nil,
                cpid: Swift.Int? = nil,
                bdid: Swift.Int? = nil
            ) {
                self.name = name
                self.identifier = identifier
                self.firmwares = firmwares
                self.boards = boards
                self.boardconfig = boardconfig
                self.platform = platform
                self.cpid = cpid
                self.bdid = bdid
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case identifier
                case firmwares
                case boards
                case boardconfig
                case platform
                case cpid
                case bdid
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// Get Firmwares For Device
    ///
    /// GetFirmwaresForDevice returns Firmwares for a given Device. An optional "type" get parameter may be
    /// specified to retrieve OTA Firmwares instead of normal IPSW files. 
    /// As of 2021-03-04, it is recommended that you use the "boards" property of the device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /device/{identifier}`.
    /// - Remark: Generated from `#/paths//device/{identifier}/get(firmwaresForDevice)`.
    internal enum firmwaresForDevice {
        internal static let id: Swift.String = "firmwaresForDevice"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/device/{identifier}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/device/{identifier}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                internal init(identifier: Swift.String) {
                    self.identifier = identifier
                }
            }
            internal var path: Operations.firmwaresForDevice.Input.Path
            /// - Remark: Generated from `#/paths/device/{identifier}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/device/{identifier}/GET/query/type`.
                internal var _type: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - _type:
                internal init(_type: Swift.String) {
                    self._type = _type
                }
            }
            internal var query: Operations.firmwaresForDevice.Input.Query
            /// - Remark: Generated from `#/paths/device/{identifier}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwaresForDevice.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwaresForDevice.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.firmwaresForDevice.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.firmwaresForDevice.Input.Path,
                query: Operations.firmwaresForDevice.Input.Query,
                headers: Operations.firmwaresForDevice.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwaresForDevice.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Device)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Device {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.firmwaresForDevice.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.firmwaresForDevice.Output.Ok.Headers = .init(),
                    body: Operations.firmwaresForDevice.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//device/{identifier}/get(firmwaresForDevice)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.firmwaresForDevice.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.firmwaresForDevice.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/device/{identifier}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwaresForDevice.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.firmwaresForDevice.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//device/{identifier}/get(firmwaresForDevice)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.firmwaresForDevice.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.firmwaresForDevice.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Get Devices
    ///
    /// GetDevices returns a list of all devices known to IPSW Downloads
    /// If you wish to only get devices which have Firmware Keys, add the ?keysOnly=true parameter.
    /// As of 2021-03-04, it is recommended that you use the "boards" property of each device, as devices can have multiple boards.
    ///
    /// - Remark: HTTP `GET /devices`.
    /// - Remark: Generated from `#/paths//devices/get(devices)`.
    internal enum devices {
        internal static let id: Swift.String = "devices"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/devices/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/devices/GET/query/keysOnly`.
                internal var keysOnly: Swift.Bool
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - keysOnly:
                internal init(keysOnly: Swift.Bool) {
                    self.keysOnly = keysOnly
                }
            }
            internal var query: Operations.devices.Input.Query
            /// - Remark: Generated from `#/paths/devices/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.devices.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.devices.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.devices.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.devices.Input.Query,
                headers: Operations.devices.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.devices.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/devices/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/content/application\/json`.
                    case json([OpenAPIRuntime.OpenAPIValueContainer])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [OpenAPIRuntime.OpenAPIValueContainer] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/devices/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.devices.Output.Ok.Headers = .init(),
                    body: Operations.devices.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//devices/get(devices)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.devices.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.devices.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Download IPSW
    ///
    /// DownloadIPSW redirects to download an IPSW as specified by its identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/download/{identifier}/{buildid}/get(ipswDownload)`.
    internal enum ipswDownload {
        internal static let id: Swift.String = "ipswDownload"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/path/buildid`.
                internal var buildid: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                ///   - buildid:
                internal init(
                    identifier: Swift.String,
                    buildid: Swift.String
                ) {
                    self.identifier = identifier
                    self.buildid = buildid
                }
            }
            internal var path: Operations.ipswDownload.Input.Path
            /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswDownload.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswDownload.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.ipswDownload.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.ipswDownload.Input.Path,
                headers: Operations.ipswDownload.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswDownload.Output.Found.Headers
                /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/302/content/text\/html; charset=utf-8`.
                    case text_html_charset_utf_hyphen_8(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.text_html_charset_utf_hyphen_8`.
                    ///
                    /// - Throws: An error if `self` is not `.text_html_charset_utf_hyphen_8`.
                    /// - SeeAlso: `.text_html_charset_utf_hyphen_8`.
                    internal var text_html_charset_utf_hyphen_8: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .text_html_charset_utf_hyphen_8(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.ipswDownload.Output.Found.Body
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.ipswDownload.Output.Found.Headers = .init(),
                    body: Operations.ipswDownload.Output.Found.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Found
            ///
            /// - Remark: Generated from `#/paths//ipsw/download/{identifier}/{buildid}/get(ipswDownload)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.ipswDownload.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.ipswDownload.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/download/{identifier}/{buildid}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswDownload.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.ipswDownload.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//ipsw/download/{identifier}/{buildid}/get(ipswDownload)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.ipswDownload.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.ipswDownload.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case text_html_charset_utf_hyphen_8
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/html":
                    self = .text_html_charset_utf_hyphen_8
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .text_html_charset_utf_hyphen_8:
                    return "text/html"
                }
            }
            internal static var allCases: [Self] {
                [
                    .text_html_charset_utf_hyphen_8
                ]
            }
        }
    }
    /// Get IPSW Information
    ///
    /// GetIPSWInformation returns all known information for an IPSW as specified by identifier and buildid
    ///
    /// - Remark: HTTP `GET /ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ipsw/{identifier}/{buildid}/get(ipswByIdentifierAndBuild)`.
    internal enum ipswByIdentifierAndBuild {
        internal static let id: Swift.String = "ipswByIdentifierAndBuild"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/path/buildid`.
                internal var buildid: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                ///   - buildid:
                internal init(
                    identifier: Swift.String,
                    buildid: Swift.String
                ) {
                    self.identifier = identifier
                    self.buildid = buildid
                }
            }
            internal var path: Operations.ipswByIdentifierAndBuild.Input.Path
            /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswByIdentifierAndBuild.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswByIdentifierAndBuild.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.ipswByIdentifierAndBuild.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.ipswByIdentifierAndBuild.Input.Path,
                headers: Operations.ipswByIdentifierAndBuild.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswByIdentifierAndBuild.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Firmware)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Firmware {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.ipswByIdentifierAndBuild.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.ipswByIdentifierAndBuild.Output.Ok.Headers = .init(),
                    body: Operations.ipswByIdentifierAndBuild.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//ipsw/{identifier}/{buildid}/get(ipswByIdentifierAndBuild)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ipswByIdentifierAndBuild.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.ipswByIdentifierAndBuild.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{identifier}/{buildid}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswByIdentifierAndBuild.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.ipswByIdentifierAndBuild.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//ipsw/{identifier}/{buildid}/get(ipswByIdentifierAndBuild)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.ipswByIdentifierAndBuild.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.ipswByIdentifierAndBuild.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Get IPSW List For Version
    ///
    /// GetIPSWListForVersion finds all IPSW files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ipsw/{version}`.
    /// - Remark: Generated from `#/paths//ipsw/{version}/get(ipswListForVersion)`.
    internal enum ipswListForVersion {
        internal static let id: Swift.String = "ipswListForVersion"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ipsw/{version}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{version}/GET/path/version`.
                internal var version: Swift.Double
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - version:
                internal init(version: Swift.Double) {
                    self.version = version
                }
            }
            internal var path: Operations.ipswListForVersion.Input.Path
            /// - Remark: Generated from `#/paths/ipsw/{version}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswListForVersion.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.ipswListForVersion.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.ipswListForVersion.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.ipswListForVersion.Input.Path,
                headers: Operations.ipswListForVersion.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswListForVersion.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/content/application\/json`.
                    case json([OpenAPIRuntime.OpenAPIValueContainer])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [OpenAPIRuntime.OpenAPIValueContainer] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.ipswListForVersion.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.ipswListForVersion.Output.Ok.Headers = .init(),
                    body: Operations.ipswListForVersion.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//ipsw/{version}/get(ipswListForVersion)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.ipswListForVersion.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.ipswListForVersion.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ipsw/{version}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.ipswListForVersion.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.ipswListForVersion.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//ipsw/{version}/get(ipswListForVersion)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.ipswListForVersion.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.ipswListForVersion.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Download Itunes
    ///
    /// DownloadItunes redirects to download an iTunes installer as specified by its platform and version, and architecture for windows
    ///
    /// - Remark: HTTP `GET /itunes/download/{platform}/{version}`.
    /// - Remark: Generated from `#/paths//itunes/download/{platform}/{version}/get(itunesDownloadForPlatformAndVersion)`.
    internal enum itunesDownloadForPlatformAndVersion {
        internal static let id: Swift.String = "itunesDownloadForPlatformAndVersion"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/path/platform`.
                internal var platform: Swift.String
                /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/path/version`.
                internal var version: Swift.Double
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - platform:
                ///   - version:
                internal init(
                    platform: Swift.String,
                    version: Swift.Double
                ) {
                    self.platform = platform
                    self.version = version
                }
            }
            internal var path: Operations.itunesDownloadForPlatformAndVersion.Input.Path
            /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/query/arch`.
                internal var arch: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - arch:
                internal init(arch: Swift.String) {
                    self.arch = arch
                }
            }
            internal var query: Operations.itunesDownloadForPlatformAndVersion.Input.Query
            /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.itunesDownloadForPlatformAndVersion.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.itunesDownloadForPlatformAndVersion.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.itunesDownloadForPlatformAndVersion.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.itunesDownloadForPlatformAndVersion.Input.Path,
                query: Operations.itunesDownloadForPlatformAndVersion.Input.Query,
                headers: Operations.itunesDownloadForPlatformAndVersion.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.itunesDownloadForPlatformAndVersion.Output.Found.Headers
                /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/itunes/download/{platform}/{version}/GET/responses/302/content/text\/html; charset=utf-8`.
                    case text_html_charset_utf_hyphen_8(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.text_html_charset_utf_hyphen_8`.
                    ///
                    /// - Throws: An error if `self` is not `.text_html_charset_utf_hyphen_8`.
                    /// - SeeAlso: `.text_html_charset_utf_hyphen_8`.
                    internal var text_html_charset_utf_hyphen_8: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .text_html_charset_utf_hyphen_8(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.itunesDownloadForPlatformAndVersion.Output.Found.Body
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.itunesDownloadForPlatformAndVersion.Output.Found.Headers = .init(),
                    body: Operations.itunesDownloadForPlatformAndVersion.Output.Found.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Found
            ///
            /// - Remark: Generated from `#/paths//itunes/download/{platform}/{version}/get(itunesDownloadForPlatformAndVersion)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.itunesDownloadForPlatformAndVersion.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.itunesDownloadForPlatformAndVersion.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case text_html_charset_utf_hyphen_8
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/html":
                    self = .text_html_charset_utf_hyphen_8
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .text_html_charset_utf_hyphen_8:
                    return "text/html"
                }
            }
            internal static var allCases: [Self] {
                [
                    .text_html_charset_utf_hyphen_8
                ]
            }
        }
    }
    /// Find Itunes
    ///
    /// FindItunes finds FindItunes versions for a given platform. specify either "windows" or "macOS"
    ///
    /// - Remark: HTTP `GET /itunes/{platform}`.
    /// - Remark: Generated from `#/paths//itunes/{platform}/get(itunesForPlatform)`.
    internal enum itunesForPlatform {
        internal static let id: Swift.String = "itunesForPlatform"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/itunes/{platform}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/{platform}/GET/path/platform`.
                internal var platform: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - platform:
                internal init(platform: Swift.String) {
                    self.platform = platform
                }
            }
            internal var path: Operations.itunesForPlatform.Input.Path
            /// - Remark: Generated from `#/paths/itunes/{platform}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.itunesForPlatform.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.itunesForPlatform.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.itunesForPlatform.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.itunesForPlatform.Input.Path,
                headers: Operations.itunesForPlatform.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.itunesForPlatform.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.iTunes])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.iTunes] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.itunesForPlatform.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.itunesForPlatform.Output.Ok.Headers = .init(),
                    body: Operations.itunesForPlatform.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//itunes/{platform}/get(itunesForPlatform)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.itunesForPlatform.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.itunesForPlatform.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/itunes/{platform}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.itunesForPlatform.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.itunesForPlatform.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//itunes/{platform}/get(itunesForPlatform)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.itunesForPlatform.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.itunesForPlatform.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Keys Device List
    ///
    /// KeysDeviceList returns the firmwares which have keys for a given device
    ///
    /// - Remark: HTTP `GET /keys/device/{identifier}`.
    /// - Remark: Generated from `#/paths//keys/device/{identifier}/get(firmwareKeysForIdentifier)`.
    internal enum firmwareKeysForIdentifier {
        internal static let id: Swift.String = "firmwareKeysForIdentifier"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                internal init(identifier: Swift.String) {
                    self.identifier = identifier
                }
            }
            internal var path: Operations.firmwareKeysForIdentifier.Input.Path
            /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwareKeysForIdentifier.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwareKeysForIdentifier.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.firmwareKeysForIdentifier.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.firmwareKeysForIdentifier.Input.Path,
                headers: Operations.firmwareKeysForIdentifier.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwareKeysForIdentifier.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.FirmwareKey])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.FirmwareKey] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.firmwareKeysForIdentifier.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.firmwareKeysForIdentifier.Output.Ok.Headers = .init(),
                    body: Operations.firmwareKeysForIdentifier.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//keys/device/{identifier}/get(firmwareKeysForIdentifier)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.firmwareKeysForIdentifier.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.firmwareKeysForIdentifier.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/device/{identifier}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwareKeysForIdentifier.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.firmwareKeysForIdentifier.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//keys/device/{identifier}/get(firmwareKeysForIdentifier)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.firmwareKeysForIdentifier.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.firmwareKeysForIdentifier.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Keys For IPSW
    ///
    /// KeysForIPSW returns FirmwareKeys for a given IPSW
    ///
    /// - Remark: HTTP `GET /keys/ipsw/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//keys/ipsw/{identifier}/{buildid}/get(firmwareKeysForIdentifierAndBuild)`.
    internal enum firmwareKeysForIdentifierAndBuild {
        internal static let id: Swift.String = "firmwareKeysForIdentifierAndBuild"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/path/buildid`.
                internal var buildid: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                ///   - buildid:
                internal init(
                    identifier: Swift.String,
                    buildid: Swift.String
                ) {
                    self.identifier = identifier
                    self.buildid = buildid
                }
            }
            internal var path: Operations.firmwareKeysForIdentifierAndBuild.Input.Path
            /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwareKeysForIdentifierAndBuild.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.firmwareKeysForIdentifierAndBuild.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.firmwareKeysForIdentifierAndBuild.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.firmwareKeysForIdentifierAndBuild.Input.Path,
                headers: Operations.firmwareKeysForIdentifierAndBuild.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwareKeysForIdentifierAndBuild.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/json`.
                    case json([OpenAPIRuntime.OpenAPIValueContainer])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [OpenAPIRuntime.OpenAPIValueContainer] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.firmwareKeysForIdentifierAndBuild.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.firmwareKeysForIdentifierAndBuild.Output.Ok.Headers = .init(),
                    body: Operations.firmwareKeysForIdentifierAndBuild.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//keys/ipsw/{identifier}/{buildid}/get(firmwareKeysForIdentifierAndBuild)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.firmwareKeysForIdentifierAndBuild.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.firmwareKeysForIdentifierAndBuild.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/keys/ipsw/{identifier}/{buildid}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.firmwareKeysForIdentifierAndBuild.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.firmwareKeysForIdentifierAndBuild.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//keys/ipsw/{identifier}/{buildid}/get(firmwareKeysForIdentifierAndBuild)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.firmwareKeysForIdentifierAndBuild.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.firmwareKeysForIdentifierAndBuild.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Identify Model
    ///
    /// IdentifyModel finds the identifier of a given model number
    ///
    /// - Remark: HTTP `GET /model/{model}`.
    /// - Remark: Generated from `#/paths//model/{model}/get(identifierForModel)`.
    internal enum identifierForModel {
        internal static let id: Swift.String = "identifierForModel"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/model/{model}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/model/{model}/GET/path/model`.
                internal var model: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - model:
                internal init(model: Swift.String) {
                    self.model = model
                }
            }
            internal var path: Operations.identifierForModel.Input.Path
            /// - Remark: Generated from `#/paths/model/{model}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.identifierForModel.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.identifierForModel.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.identifierForModel.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.identifierForModel.Input.Path,
                headers: Operations.identifierForModel.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.identifierForModel.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Model)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Model {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.identifierForModel.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.identifierForModel.Output.Ok.Headers = .init(),
                    body: Operations.identifierForModel.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//model/{model}/get(identifierForModel)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.identifierForModel.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.identifierForModel.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/model/{model}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/model/{model}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.identifierForModel.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.identifierForModel.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//model/{model}/get(identifierForModel)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.identifierForModel.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.identifierForModel.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// OTA Documentation
    ///
    /// OTADocumentation returns the documentation for a given device type and version
    ///
    /// - Remark: HTTP `GET /ota/documentation/{device}/{version}`.
    /// - Remark: Generated from `#/paths//ota/documentation/{device}/{version}/get(otaDocumentationForDeviceAndVersion)`.
    internal enum otaDocumentationForDeviceAndVersion {
        internal static let id: Swift.String = "otaDocumentationForDeviceAndVersion"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/path/device`.
                internal var device: Swift.String
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/path/version`.
                internal var version: Swift.Double
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - device:
                ///   - version:
                internal init(
                    device: Swift.String,
                    version: Swift.Double
                ) {
                    self.device = device
                    self.version = version
                }
            }
            internal var path: Operations.otaDocumentationForDeviceAndVersion.Input.Path
            /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaDocumentationForDeviceAndVersion.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaDocumentationForDeviceAndVersion.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.otaDocumentationForDeviceAndVersion.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.otaDocumentationForDeviceAndVersion.Input.Path,
                headers: Operations.otaDocumentationForDeviceAndVersion.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/headers/X-Frame-Options`.
                    internal var X_hyphen_Frame_hyphen_Options: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    ///   - X_hyphen_Frame_hyphen_Options:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil,
                        X_hyphen_Frame_hyphen_Options: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                        self.X_hyphen_Frame_hyphen_Options = X_hyphen_Frame_hyphen_Options
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otaDocumentationForDeviceAndVersion.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/200/content/text\/html`.
                    case html(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.html`.
                    ///
                    /// - Throws: An error if `self` is not `.html`.
                    /// - SeeAlso: `.html`.
                    internal var html: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .html(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.otaDocumentationForDeviceAndVersion.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.otaDocumentationForDeviceAndVersion.Output.Ok.Headers = .init(),
                    body: Operations.otaDocumentationForDeviceAndVersion.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//ota/documentation/{device}/{version}/get(otaDocumentationForDeviceAndVersion)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.otaDocumentationForDeviceAndVersion.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.otaDocumentationForDeviceAndVersion.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otaDocumentationForDeviceAndVersion.Output.NotFound.Headers
                /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/documentation/{device}/{version}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.NotFoundDetails)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.NotFoundDetails {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.otaDocumentationForDeviceAndVersion.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.otaDocumentationForDeviceAndVersion.Output.NotFound.Headers = .init(),
                    body: Operations.otaDocumentationForDeviceAndVersion.Output.NotFound.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//ota/documentation/{device}/{version}/get(otaDocumentationForDeviceAndVersion)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.otaDocumentationForDeviceAndVersion.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.otaDocumentationForDeviceAndVersion.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case html
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/html":
                    self = .html
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .html:
                    return "text/html"
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .html,
                    .json
                ]
            }
        }
    }
    /// Download OTA
    ///
    /// DownloadOTA redirects to download an OTA Firmware as specified by its identifier, buildid and optionally prerequisite
    ///
    /// - Remark: HTTP `GET /ota/download/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/download/{identifier}/{buildid}/get(otaDownloadForIdentifierAndBuild)`.
    internal enum otaDownloadForIdentifierAndBuild {
        internal static let id: Swift.String = "otaDownloadForIdentifierAndBuild"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/path/buildid`.
                internal var buildid: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                ///   - buildid:
                internal init(
                    identifier: Swift.String,
                    buildid: Swift.String
                ) {
                    self.identifier = identifier
                    self.buildid = buildid
                }
            }
            internal var path: Operations.otaDownloadForIdentifierAndBuild.Input.Path
            /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/query/prerequisite`.
                internal var prerequisite: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - prerequisite:
                internal init(prerequisite: Swift.String) {
                    self.prerequisite = prerequisite
                }
            }
            internal var query: Operations.otaDownloadForIdentifierAndBuild.Input.Query
            /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaDownloadForIdentifierAndBuild.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaDownloadForIdentifierAndBuild.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.otaDownloadForIdentifierAndBuild.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.otaDownloadForIdentifierAndBuild.Input.Path,
                query: Operations.otaDownloadForIdentifierAndBuild.Input.Query,
                headers: Operations.otaDownloadForIdentifierAndBuild.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Found: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/headers/Location`.
                    internal var Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Location = Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otaDownloadForIdentifierAndBuild.Output.Found.Headers
                /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/download/{identifier}/{buildid}/GET/responses/302/content/text\/html; charset=utf-8`.
                    case text_html_charset_utf_hyphen_8(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.text_html_charset_utf_hyphen_8`.
                    ///
                    /// - Throws: An error if `self` is not `.text_html_charset_utf_hyphen_8`.
                    /// - SeeAlso: `.text_html_charset_utf_hyphen_8`.
                    internal var text_html_charset_utf_hyphen_8: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .text_html_charset_utf_hyphen_8(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.otaDownloadForIdentifierAndBuild.Output.Found.Body
                /// Creates a new `Found`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.otaDownloadForIdentifierAndBuild.Output.Found.Headers = .init(),
                    body: Operations.otaDownloadForIdentifierAndBuild.Output.Found.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Found
            ///
            /// - Remark: Generated from `#/paths//ota/download/{identifier}/{buildid}/get(otaDownloadForIdentifierAndBuild)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Operations.otaDownloadForIdentifierAndBuild.Output.Found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            internal var found: Operations.otaDownloadForIdentifierAndBuild.Output.Found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case text_html_charset_utf_hyphen_8
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/html":
                    self = .text_html_charset_utf_hyphen_8
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .text_html_charset_utf_hyphen_8:
                    return "text/html"
                }
            }
            internal static var allCases: [Self] {
                [
                    .text_html_charset_utf_hyphen_8
                ]
            }
        }
    }
    /// Get OTA Information
    ///
    /// GetOTAInformation returns all known information for an OTA specified by its identifier and build (and optionally
    /// prerequisite firmware)
    ///
    /// - Remark: HTTP `GET /ota/{identifier}/{buildid}`.
    /// - Remark: Generated from `#/paths//ota/{identifier}/{buildid}/get(otaInformationForIdentifierAndBuild)`.
    internal enum otaInformationForIdentifierAndBuild {
        internal static let id: Swift.String = "otaInformationForIdentifierAndBuild"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/path/identifier`.
                internal var identifier: Swift.String
                /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/path/buildid`.
                internal var buildid: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - identifier:
                ///   - buildid:
                internal init(
                    identifier: Swift.String,
                    buildid: Swift.String
                ) {
                    self.identifier = identifier
                    self.buildid = buildid
                }
            }
            internal var path: Operations.otaInformationForIdentifierAndBuild.Input.Path
            /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/query/prerequisite`.
                internal var prerequisite: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - prerequisite:
                internal init(prerequisite: Swift.String) {
                    self.prerequisite = prerequisite
                }
            }
            internal var query: Operations.otaInformationForIdentifierAndBuild.Input.Query
            /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaInformationForIdentifierAndBuild.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otaInformationForIdentifierAndBuild.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.otaInformationForIdentifierAndBuild.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.otaInformationForIdentifierAndBuild.Input.Path,
                query: Operations.otaInformationForIdentifierAndBuild.Input.Query,
                headers: Operations.otaInformationForIdentifierAndBuild.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otaInformationForIdentifierAndBuild.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.OTA)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.OTA {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ota/{identifier}/{buildid}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.otaInformationForIdentifierAndBuild.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.otaInformationForIdentifierAndBuild.Output.Ok.Headers = .init(),
                    body: Operations.otaInformationForIdentifierAndBuild.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//ota/{identifier}/{buildid}/get(otaInformationForIdentifierAndBuild)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.otaInformationForIdentifierAndBuild.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.otaInformationForIdentifierAndBuild.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Get OTA List For Version
    ///
    /// GetOTAListForVersion finds all OTA files for a given iOS version
    ///
    /// - Remark: HTTP `GET /ota/{version}`.
    /// - Remark: Generated from `#/paths//ota/{version}/get(otasForVersion)`.
    internal enum otasForVersion {
        internal static let id: Swift.String = "otasForVersion"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/ota/{version}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{version}/GET/path/version`.
                internal var version: Swift.Double
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - version:
                internal init(version: Swift.Double) {
                    self.version = version
                }
            }
            internal var path: Operations.otasForVersion.Input.Path
            /// - Remark: Generated from `#/paths/ota/{version}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otasForVersion.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.otasForVersion.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.otasForVersion.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.otasForVersion.Input.Path,
                headers: Operations.otasForVersion.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otasForVersion.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/content/application\/json`.
                    case json([OpenAPIRuntime.OpenAPIValueContainer])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [OpenAPIRuntime.OpenAPIValueContainer] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.otasForVersion.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.otasForVersion.Output.Ok.Headers = .init(),
                    body: Operations.otasForVersion.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//ota/{version}/get(otasForVersion)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.otasForVersion.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.otasForVersion.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/404/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/404/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/404/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/ota/{version}/GET/responses/404/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.otasForVersion.Output.NotFound.Headers
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                internal init(headers: Operations.otasForVersion.Output.NotFound.Headers = .init()) {
                    self.headers = headers
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//ota/{version}/get(otasForVersion)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.otasForVersion.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.otasForVersion.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
    /// Releases
    ///
    /// Releases returns the release timeline of all entities in the IPSW Downloads database
    ///
    /// - Remark: HTTP `GET /releases`.
    /// - Remark: Generated from `#/paths//releases/get(releases)`.
    internal enum releases {
        internal static let id: Swift.String = "releases"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/releases/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releases.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releases.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.releases.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.releases.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers`.
                internal struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers/Access-Control-Allow-Methods`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String?
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers/Access-Control-Allow-Origin`.
                    internal var Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String?
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers/Cache-Control`.
                    internal var Cache_hyphen_Control: Swift.String?
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers/Expires`.
                    internal var Expires: Swift.String?
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/headers/X-Data-Location`.
                    internal var X_hyphen_Data_hyphen_Location: Swift.String?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Methods:
                    ///   - Access_hyphen_Control_hyphen_Allow_hyphen_Origin:
                    ///   - Cache_hyphen_Control:
                    ///   - Expires:
                    ///   - X_hyphen_Data_hyphen_Location:
                    internal init(
                        Access_hyphen_Control_hyphen_Allow_hyphen_Methods: Swift.String? = nil,
                        Access_hyphen_Control_hyphen_Allow_hyphen_Origin: Swift.String? = nil,
                        Cache_hyphen_Control: Swift.String? = nil,
                        Expires: Swift.String? = nil,
                        X_hyphen_Data_hyphen_Location: Swift.String? = nil
                    ) {
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Methods = Access_hyphen_Control_hyphen_Allow_hyphen_Methods
                        self.Access_hyphen_Control_hyphen_Allow_hyphen_Origin = Access_hyphen_Control_hyphen_Allow_hyphen_Origin
                        self.Cache_hyphen_Control = Cache_hyphen_Control
                        self.Expires = Expires
                        self.X_hyphen_Data_hyphen_Location = X_hyphen_Data_hyphen_Location
                    }
                }
                /// Received HTTP response headers
                internal var headers: Operations.releases.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/releases/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/content/application\/json`.
                    case json([OpenAPIRuntime.OpenAPIValueContainer])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [OpenAPIRuntime.OpenAPIValueContainer] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/content/application\/x-plist`.
                    case application_x_hyphen_plist(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_x_hyphen_plist`.
                    ///
                    /// - Throws: An error if `self` is not `.application_x_hyphen_plist`.
                    /// - SeeAlso: `.application_x_hyphen_plist`.
                    internal var application_x_hyphen_plist: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_x_hyphen_plist(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/x-plist",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/releases/GET/responses/200/content/application\/xml`.
                    case xml(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.xml`.
                    ///
                    /// - Throws: An error if `self` is not `.xml`.
                    /// - SeeAlso: `.xml`.
                    internal var xml: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .xml(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/xml",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.releases.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                internal init(
                    headers: Operations.releases.Output.Ok.Headers = .init(),
                    body: Operations.releases.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//releases/get(releases)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.releases.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.releases.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_x_hyphen_plist
            case xml
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/x-plist":
                    self = .application_x_hyphen_plist
                case "application/xml":
                    self = .xml
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_x_hyphen_plist:
                    return "application/x-plist"
                case .xml:
                    return "application/xml"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json,
                    .application_x_hyphen_plist,
                    .xml
                ]
            }
        }
    }
}
